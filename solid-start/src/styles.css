@layer reset, defaults, lib, component, feature, app, customer;

@import '../node_modules/open-props/open-props.min.css';

@layer component {
    @layer layout, spacing, animation, theme;
}

@layer feature {
    @layer layout, spacing, animation, theme;
}

@layer app {
    @layer layout, spacing, animation, theme;
}

@layer customer {
    @layer layout, spacing, animation, theme;
}

@layer reset {
    html,
    body {
        margin: 0;
        padding: 0;
        inline-size: 100%;
        block-size: 100%;
        overflow: clip;
        font-family: sans-serif;
    }

    * {
        position: relative;
        box-sizing: border-box;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        margin: 0;
    }

    :is(h1, h2, h3, h4, h5, h6):has(+ :is(h2, h3, h4, h4, h5, h6)) {
        margin-block-end: 0.25rem;
    }
}

@layer defaults {
    :root {
        --grid: [full-start] minmax(5vw, 1fr) [main-start] repeat(12, minmax(0, calc(1368px / 12))) [main-end]
            minmax(5vw, 1fr) [full-end];
        --main: main;
        --full: full;
    }

    a[link] {
        text-decoration: none;
        color: var(--gray-5);

        &.active {
            color: var(--gray-7);
            background-color: var(--gray-3);
            font-weight: bold;
        }
    }

    button {
        display: block;
        background-color: var(--gray-3);
        border: none;
        cursor: pointer;

        &:not(.link) {
            padding: var(--size-2) var(--size-3);
            color: var(--gray-7);
            border-radius: var(--radius-2);

            &:disabled {
                background-color: var(--gray-1);
                color: var(--gray-4);
            }

            &:not(:disabled):active {
                background-color: var(--gray-1);
                color: var(--gray-6);
            }
        }

        &.link {
            background-color: transparent;
            text-decoration: underline;
            color: var(--blue-5);
        }
    }
}
